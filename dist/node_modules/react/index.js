(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.React = {}));
})(this, (function (exports) { 'use strict';

	const supportSymbol = typeof Symbol === 'function' && Symbol.for;
	const REACT_ELEMENT_TYPE = supportSymbol
	    ? Symbol.for('react.element')
	    : 0xeac7;

	/**
	 * ReactElement 构造函数
	 * @param type element type
	 * @param props 组件的属性
	 * @param key 组件的key
	 * @param ref 组件的ref
	 * @returns
	 */
	const ReactElement = (type, props, key, ref) => {
	    const element = {
	        $$typeof: REACT_ELEMENT_TYPE,
	        type,
	        props,
	        key,
	        ref,
	        __mark: 'adekang'
	    };
	    return element;
	};
	// jsxDEV
	const jsxDEV = (type, config) => {
	    let key = null;
	    const props = {};
	    let ref = null;
	    //  遍历config对象，将key和ref属性单独处理，其他属性放到props对象中
	    for (const prop in config) {
	        const val = config[prop];
	        if (prop === 'key') {
	            if (val !== undefined) {
	                key = '' + val;
	            }
	            continue;
	        }
	        if (prop === 'ref') {
	            if (val !== undefined) {
	                ref = val;
	            }
	            continue;
	        }
	        // 其他自己的属性放到props对象中，而不是原型链上的属性
	        if ({}.hasOwnProperty.call(config, prop)) {
	            props[prop] = val;
	        }
	    }
	    return ReactElement(type, props, key, ref);
	};

	const currentDispatcher = {
	    current: null
	};
	const resolveDispatcher = () => {
	    const dispatcher = currentDispatcher.current;
	    if (dispatcher === null) {
	        throw new Error('hook只能在函数中执行');
	    }
	    return dispatcher;
	};

	const useState = (initialState) => {
	    const dispatcher = resolveDispatcher();
	    return dispatcher.useState(initialState);
	};
	const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {
	    currentDispatcher
	};
	var index = {
	    version: '0.0.0',
	    createElement: jsxDEV
	};

	exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
	exports.default = index;
	exports.useState = useState;

	Object.defineProperty(exports, '__esModule', { value: true });

}));
